@Mist{riscv,
    title = {RISC-V Fundation. En [En línea].},
    howpublished = {Available at \url{https://riscv.org/}. Last access May 2021.}
}

@ARTICLE{sys_verilog,  author={},  journal={IEEE Std 1800-2017 (Revision of IEEE Std 1800-2012)},   title={IEEE Standard for SystemVerilog--Unified Hardware Design, Specification, and Verification Language},   year={2018},  volume={},  number={},  pages={1-1315},  doi={10.1109/IEEESTD.2018.8299595}}

@Mist{axi,
    title = {LogiCORE IP Product Guide AXI4-Stream Infrastructure IP Suite v3.0},
    howpublished = {Available at \url{https://www.xilinx.com/support/documentation/ip_documentation/axis_infrastructure_ip_suite/v1_1/pg085-axi4stream-infrastructure.pdf}. Last accerss May 2021.}
}

@Mist{mig,
    title = {User Guide 7 Series FPGAs Memory Interface Solutions},
    howpublished = {Available at \url{https://www.xilinx.com/support/documentation/ip_documentation/ug586_7Series_MIS.pdf}. Last accerss May 2021.}
}

@Mist{fpga_resources,
    title = {User guide series 7 Xilinx},
    howpublished = {Available at \url{https://www.xilinx.com/support/documentation/user_guides/ug474_7Series_CLB.pdf}. Last access May 2021.}
}

@Mist{sp701,
    title = {User guide SP701},
    howpublished = {Available at \url{https://www.xilinx.com/support/documentation/boards_and_kits/sp701/ug1319-sp701-eval-bd.pdf}. Last access May 2021.}
}

@inproceedings{openpiton,
author = {Balkind, Jonathan and McKeown, Michael and Fu, Yaosheng and Nguyen, Tri and Zhou, Yanqi and Lavrov, Alexey and Shahrad, Mohammad and Fuchs, Adi and Payne, Samuel and Liang, Xiaohua and Matl, Matthew and Wentzlaff, David},
title = {OpenPiton: An Open Source Manycore Research Framework},
booktitle = {Proceedings of the Twenty-First International Conference on Architectural Support for Programming Languages and Operating Systems},
series = {ASPLOS '16},
year = {2016},
isbn = {978-1-4503-4091-5},
location = {Atlanta, Georgia, USA},
pages = {217--232},
numpages = {16},
url = {http://doi.acm.org/10.1145/2872362.2872414},
doi = {10.1145/2872362.2872414},
acmid = {2872414},
publisher = {ACM},
address = {New York, NY, USA},
keywords = {manycore, multicore, open-source},
}

@techreport{rocket,
    Author = {Asanović, Krste and Avizienis, Rimas and Bachrach, Jonathan and Beamer, Scott and Biancolin, David and Celio, Christopher and Cook, Henry and Dabbelt, Daniel and Hauser, John and Izraelevitz, Adam and Karandikar, Sagar and Keller, Ben and Kim, Donggyu and Koenig, John and Lee, Yunsup and Love, Eric and Maas, Martin and Magyar, Albert and Mao, Howard and Moreto, Miquel and Ou, Albert and Patterson, David A. and Richards, Brian and Schmidt, Colin and Twigg, Stephen and Vo, Huy and Waterman, Andrew},
    Title = {The Rocket Chip Generator},
    Institution = {EECS Department, University of California, Berkeley},
    Year = {2016},
    Month = {Apr},
    URL = {http://www2.eecs.berkeley.edu/Pubs/TechRpts/2016/EECS-2016-17.html},
    Number = {UCB/EECS-2016-17},
    Abstract = {Rocket Chip is an open-source Sysem-on-Chip design generator that emits synthesizable RTL. It leverages the Chisel hardware construction language to compose a library of sophisticated generators for cores, caches, and interconnects into an integrated SoC. Rocket Chip generates general-purpose processor cores that use the open RISC-V ISA, and provides both an in-order core generator (Rocket) and an out-of-order core generator (BOOM). For SoC designers interested in utilizing heterogeneous specialization for added efficiency gains, Rocket Chip supports the integration of custom accelerators in the form of instruction set extensions, coprocessors, or fully independent novel cores. Rocket Chip has been taped out (manufactured) eleven times, and yielded functional silicon prototypes capable of booting Linux.}
}
@Mist{tools,
	title = {RISCV-tools},
	howpublished = {Available at \url{https://github.com/riscv/riscv-tools}. Last access June 2021}
}
